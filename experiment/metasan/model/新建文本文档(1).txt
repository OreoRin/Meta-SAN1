python main.py --cpu --epochs 2 --model san --scale 2 --n_resgroups 20 --n_resblocks 10 --n_feats 64 --reset --chop --save_results --patch_size 96 --n_train 1


python main.py --model san --save san_test --scale 2 --n_resgroups 20 --n_resblocks 10 --n_feats 64 --reset --chop --save_results --test_only --testset Set5 --pre_train ../model/SAN_BIX2.pt --cpu

python main.py --model metarcan --ext sep  --save metarcan --lr_decay 200 --epochs 1 --cpu --batch_size 1

python main.py --model metarcan --ext sep  --save metarcan --cpu --batch_size 1 --test_only --data_test Set5 --pre_train  ./experiment/model_1.pt --save_results --scale 1.5 --chop




python main.py --model metasan --ext sep  --save metasan_results --cpu --batch_size 1 --test_only --data_test Set5 --pre_train  ./experiment/metasan/model/model_1.pt --save_results --scale 1.5 --chop

python main.py --model metasan --ext sep  --save metasan --lr_decay 200 --epochs 1 --n_GPUs 1 --batch_size 1 --reset --chop --save_results



python main.py --model metardn --ext sep --save metardn --lr_decay 200 --epochs 1 --cpu --batch_size 1

python main.py --model metardn --ext sep --save metardn --lr_decay 200 --epochs 1 --n_GPUs 1 --batch_size 1


conda install --use-local

C:\Program Files\NVIDIA Corporation\NVSMI>nvidia-smi


import torch
# 若正常则静默

a = torch.tensor(1.)
# 若正常则静默

a.cuda()
# 若正常则返回 tensor(1., device='cuda:0')

from torch.backends import cudnn
# 若正常则静默

cudnn.is_available()
# 若正常则返回 True

cudnn.is_acceptable(a.cuda()) 
# 若正常则返回 True

 

记得确认pt文件传上去没，没有，只能把pt文件单独存在一个文件夹里

看看 log里面有没有记载p s值。记载了，平均值。

还是不行就用gpu跑，san，现在在测试metardn的testcode，看看会不会出现not enough memory.不会，用gpu跑也没用

metarcan也不行测试代码会报错，不过加了batch_size 1之后能跑了，但是san还是不行。

试试将metasan导入，虚拟环境再加上batch_size 1 跑   买了32g的ram，能跑啦！！！！！！！！